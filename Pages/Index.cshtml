@page
@model IndexModel
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;

@{
    var seriesModel = new List<ChartSeriesModel>() {
        new ChartSeriesModel("S1",40),
        new ChartSeriesModel("S2",2)
    };

    var seriesArray = JArray.Parse(JsonConvert.SerializeObject(seriesModel));

}

<style>
    .highcharts-figure, .highcharts-data-table table {
        min-width: 310px;
        max-width: 800px;
        margin: 1em auto;
    }

    #container {
        height: 400px;
    }

    .highcharts-data-table table {
        font-family: Verdana, sans-serif;
        border-collapse: collapse;
        border: 1px solid #EBEBEB;
        margin: 10px auto;
        text-align: center;
        width: 100%;
        max-width: 500px;
    }

    .highcharts-data-table caption {
        padding: 1em 0;
        font-size: 1.2em;
        color: #555;
    }

    .highcharts-data-table th {
        font-weight: 600;
        padding: 0.5em;
    }

    .highcharts-data-table td, .highcharts-data-table th, .highcharts-data-table caption {
        padding: 0.5em;
    }

    .highcharts-data-table thead tr, .highcharts-data-table tr:nth-child(even) {
        background: #f8f8f8;
    }

    .highcharts-data-table tr:hover {
        background: #f1f7ff;
    }
</style>

<figure class="highcharts-figure">
    <div id="container"></div>
</figure>

@section Scripts{
    <script src="https://code.highcharts.com/highcharts.js"></script>

    <script type="text/javascript">

        window.onload = function () {
            	// Create the chart

			Highcharts.chart('container', {
				chart: {
					type: 'column'
				},
				title: {
					text: 'Total'
				},
				accessibility: {
					announceNewData: {
						enabled: true
					}
				},
				xAxis: {
					type: 'category'
				},
				yAxis: {
					title: {
						text: 'Total'
					}

				},
				legend: {
					enabled: false
				},
				plotOptions: {
					series: {
						borderWidth: 0,
						dataLabels: {
							enabled: true,
							format: '{point.y}'
						}
					}
				},

				tooltip: {
					headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
					pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>'
				},
				exporting: { enabled: false },
				series: [
					{
						name: "Total Played",
						colorByPoint: true,
						data: @Html.Raw(seriesArray)
					}
				]
			});

        }

    </script>

}